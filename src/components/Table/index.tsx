import React, {useCallback, useEffect, useState} from 'react';import "../../styles/Table.css"import TableHeader from "./TableHeader";import TableRow from "./TableRow";import Pagination from "../Pagination";const mock = {    id: 13,    title: "Fog Scent Xpressio Perfume",    description: "Product details of Best Fog Scent Xpressio Perfume 100ml For Men cool long lasting perfumes for Men",    price: 13,    discountPercentage: 8.14,    rating: 4.59,    stock: 61,    brand: "Fog Scent Xpressio",    category: "fragrances",    thumbnail: "https://i.dummyjson.com/data/products/13/thumbnail.webp",    images: [        "https://i.dummyjson.com/data/products/13/1.jpg",        "https://i.dummyjson.com/data/products/13/2.png",        "https://i.dummyjson.com/data/products/13/3.jpg",        "https://i.dummyjson.com/data/products/13/4.jpg",        "https://i.dummyjson.com/data/products/13/thumbnail.webp"    ]}function Table() {    const [pageLimit, setPageLimit] = useState(10)    const [pageNumber, setPageNumber] = useState(1)    const [paginationButtonNumber, setPaginationButtonNumber] = useState(5)    useEffect(()=>{        if(pageNumber < 5 || pageNumber +3 >= 100 / pageLimit ){            setPaginationButtonNumber(5)        }        else{            setPaginationButtonNumber(3)        }    },[pageLimit,pageNumber])    const handlerChangePageLimit = useCallback(        (e: React.ChangeEvent<HTMLSelectElement>) => {            if(Number(e.target.value) === pageLimit)return            setPageLimit(Number(e.target.value))            setPageNumber(1)        },        [pageLimit],    );    const handlerChangePageNumber = useCallback((direction? : "plus"| "minus") => (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => {        if(direction === "plus"){            setPageNumber((prev) => prev + 1)        }else if(direction === "minus"){            setPageNumber((prev) => prev - 1)        }else{            setPageNumber(Number(e.currentTarget.value))        }    },[])    return (        <table className="table-wrapper">            <TableHeader fields={["상품번호", "상품명", "브랜드", "상품내용", "가격", "평점", "재고"]}/>            <tbody>            {                Array(100).fill(0).slice((pageNumber - 1) * pageLimit, pageNumber * pageLimit).map(() => (                    <TableRow id={Math.random()} title={mock.title} description={mock.description} brand={mock.brand}                              price={mock.price} rating={mock.rating}/>))            }            </tbody>            < Pagination pageLimit={pageLimit} pageNumber={pageNumber}  paginationButtonNumber={paginationButtonNumber} handlerChangePageLimit={handlerChangePageLimit} handlerChangePageNumber={handlerChangePageNumber}   />        </table>    );}export default Table;